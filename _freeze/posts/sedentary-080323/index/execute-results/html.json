{
  "hash": "aa520b2d679cfc16781d9e94ba5aa204",
  "result": {
    "markdown": "---\ntitle: \"Sedentary\"\nsubtitle: \"I'm slowing down\"\nauthor: \"Nick Cotter\"\ndate: \"2023-03-08\"\ncategories: [exercise, analysis, exploration]\n#image: \"image.jpg\"\n---\n\n\nHow much am I slowing down over time? And how much did the pandemic affect me? Let's take a look with an Apple Health export.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.1.8\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n✔ readr     2.1.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n:::\n\n\nUnzip the export from Apple Health:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_071ab152824c294ed8214cd498a750a0'}\n\n```{.r .cell-code}\nunzip('data/export-080323.zip')\n```\n:::\n\n\nTurn the export into a data frame:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_a2b78509f10a1fe2f8e8246eaff88a97'}\n\n```{.r .cell-code}\nhealth_xml <- xmlParse(\"apple_health_export/export.xml\")\nactivity_df <- XML:::xmlAttrsToDataFrame(health_xml[\"//ActivitySummary\"], stringsAsFactors = FALSE) %>%\nas_tibble()\n```\n:::\n\n\nThe column I'm interested in here is activeEnergyBurned - here is a plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(as.Date(activity_df$dateComponents), activity_df$activeEnergyBurned)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot1-1.png){width=672}\n:::\n:::\n\n\nThat looks a bit strange - what's with the date range?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(activity_df$dateComponents)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1969-12-30\" \"2023-03-08\"\n```\n:::\n:::\n\n\nSo a pre-epoch entry exists, which is clearly bogus. I can remove it - I'm primarily interested in the pre-pandemic period and follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivity <- activity_df %>%\n  mutate(date = as.Date(dateComponents)) %>%\n  mutate(calories = as.numeric(activeEnergyBurned)) %>%\n  filter(date > \"2010-1-1\")\n```\n:::\n\n\nLet's plot it again:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(activity$date, activity$calories)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHere is the trend line:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivity %>%\n  ggplot(aes(x = date, y = calories)) + geom_line() + geom_smooth(formula = y ~ x, method = \"loess\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/trendline-1.png){width=672}\n:::\n:::\n\n\nSo, it's all been downhill since the end of 2019.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}